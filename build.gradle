apply plugin: 'java'
apply plugin: 'scala'
apply plugin: 'org.scoverage'
apply plugin: "com.github.maiflai.scalatest"

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    compile 'org.scala-lang:scala-library:2.12.2'

    //ScalaTest testing framework
//    testCompile 'junit:junit:4.12'
    testCompile "org.scalatest:scalatest_2.12:3.0.1"
    testRuntime 'org.pegdown:pegdown:1.4.2'

    // Use Scoverage for checking the tests covered
    scoverage 'org.scoverage:scalac-scoverage-plugin_2.12:1.3.1', 'org.scoverage:scalac-scoverage-runtime_2.12:1.3.1'

//    testCompile "org.scalacheck:scalacheck_2.12:1.14.0"

}


// Enabling Checkstyle
apply plugin: 'checkstyle'
checkstyle {
    toolVersion '7.8.1'
    configFile file("config/checkstyle/checkstyle.xml")
}
checkstyleMain {
    source ='src/main/scala'
}
checkstyleTest {
    source ='src/test/scala'
}

// Enabling FindBugs
apply plugin: 'findbugs'

findbugs {
    ignoreFailures = false
    toolVersion = "3.0.1"
    sourceSets=[sourceSets.main]
    excludeFilter = file("config/findbugs/excludeFilter.xml")
    reportsDir = file("$project.buildDir/reports/findbugs")
    effort = "max"
    reportLevel = "high"
    ignoreFailures = true
}
tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

apply plugin: 'scalaStyle'
scalaStyle {
    configLocation = "/path/to/scalaStyle.xml" //TODO: cambiare il path
    includeTestSourceDirectory = true
    source = "src/main/scala" //TODO: cambiare il path
    testSource = "src/test/scala" //TODO: cambiare il path
}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "gradle.plugin.com.github.maiflai:gradle-scalatest:0.23"

        //scalaStyle warnings (gradlew <project> scalaStyle)
        classpath "org.github.ngbinh.scalastyle:gradle-scalastyle-plugin_2.11:1.0.1"

        //scoverage
        classpath "gradle.plugin.org.scoverage:gradle-scoverage:2.3.0"
    }
}

